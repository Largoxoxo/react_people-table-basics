{"version":3,"sources":["types/ErrorMessage.ts","components/HomePage/HomePage.tsx","api.ts","components/TableHeader/TableHeader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/Loader/Loader.tsx","components/PeoplePage/PeoplePage.tsx","components/ErrorPage/ErrorPage.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["ErrorMessage","HomePage","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","TableHeader","values","map","value","PersonLink","person","getParent","selectedPersonSlug","useParams","slug","classNames","to","sex","name","born","died","motherName","fatherName","PeopleTable","people","parentName","parent","find","Loader","PeoplePage","useState","setPeople","None","error","setError","isLoading","setIsLoading","getPeopleFromServer","useCallback","Wrong","useEffect","length","Empty","ErrorPage","NavBar","role","isActive","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.139b00ef.chunk.js","sourcesContent":["export enum ErrorMessage {\n  None = '',\n  Empty = 'There are no people on the server',\n  Wrong = 'Something went wrong',\n}\n","import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\n\ntype Props = {\n  values: string[];\n};\n\nexport const TableHeader: React.FC<Props> = ({ values }) => {\n  return (\n    <thead>\n      <tr>\n        {values.map((value: string) => (\n          <th key={value}>{value}</th>\n        ))}\n      </tr>\n    </thead>\n  );\n};\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person;\n  getParent: (parentName: string | null) => ReactNode;\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  getParent,\n}) => {\n  const { slug: selectedPersonSlug } = useParams();\n\n  return (\n    <tbody>\n      <tr\n        data-cy=\"person\"\n        className={classNames({\n          'has-background-warning': selectedPersonSlug === person.slug,\n        })}\n      >\n        <td>\n          <Link\n            to={`/people/${person.slug}`}\n            className={classNames({\n              'has-text-danger': person.sex === 'f',\n            })}\n          >\n            {person.name}\n          </Link>\n        </td>\n\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n        <td>{getParent(person.motherName)}</td>\n        <td>{getParent(person.fatherName)}</td>\n      </tr>\n    </tbody>\n  );\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { TableHeader } from '../TableHeader';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const tableHeaderValues: string[] = ['Name', 'Sex',\n    'Born', 'Died', 'Mother', 'Father'];\n\n  const getParent = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    if (parent) {\n      return (\n        <Link\n          to={`/people/${parent.slug}`}\n          className={classNames({\n            'has-text-danger': parent.sex === 'f',\n          })}\n        >\n          {parent.name}\n        </Link>\n      );\n    }\n\n    return parentName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <TableHeader values={tableHeaderValues} />\n\n      {people.map(person => (\n        <PersonLink\n          person={person}\n          key={person.slug}\n          getParent={getParent}\n        />\n      ))}\n    </table>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { ErrorMessage } from '../../types/ErrorMessage';\nimport { PeopleTable } from '../PeopleTable';\nimport { Loader } from '../Loader';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState(ErrorMessage.None);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getPeopleFromServer = useCallback(async () => {\n    setError(ErrorMessage.None);\n    setIsLoading(true);\n\n    try {\n      setPeople(await getPeople());\n    } catch {\n      setError(ErrorMessage.Wrong);\n    }\n\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <div className=\"block\">\n      <div className=\"box table-container\">\n        <h1 className=\"title\">People Page</h1>\n\n        {isLoading && <Loader />}\n\n        {people.length > 0 && (\n          <PeopleTable people={people} />\n        )}\n        {(people.length === 0 && !isLoading) && (\n          <p data-cy=\"noPeopleMessage\">\n            {ErrorMessage.Empty}\n          </p>\n        )}\n        {(error === ErrorMessage.Wrong) && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            {ErrorMessage.Wrong}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const ErrorPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport const NavBar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          to=\"/\"\n          className={({ isActive }) => classNames('navbar-item',\n            {\n              'has-background-grey-lighter': isActive,\n            })}\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          to=\"/people\"\n          className={({ isActive }) => classNames('navbar-item',\n            {\n              'has-background-grey-lighter': isActive,\n            })}\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\nimport {\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { ErrorPage } from './components/ErrorPage';\nimport { NavBar } from './components/NavBar';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<HomePage />} />\n            <Route\n              path=\"home\"\n              element={<Navigate to=\"/\" replace />}\n            />\n            <Route path=\"people\">\n              <Route\n                index\n                element={<PeoplePage />}\n              />\n              <Route\n                path=\":slug\"\n                element={<PeoplePage />}\n              />\n            </Route>\n\n            <Route path=\"*\" element={<ErrorPage />} />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}